name: Deploy Nebula Backend

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.1"

      - name: Verify dependencies
        run: go mod tidy

      - name: Build Application
        run: GOOS=linux GOARCH=amd64 go build -o nebula-backend-server ./cmd/server/main.go

      - name: Debug SSH Connection
        run: |
          echo "Testing SSH connection to EC2 instance..."
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh-keygen -lf private_key.pem || (echo "Invalid SSH private key format" && exit 1)
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.EC2_HOST }} echo "SSH connection successful"
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            set -e
            PROJECT_DIR=${{ secrets.EC2_PROJECT_DIR }}
            BINARY_NAME="nebula-backend-server"
            SERVICE_NAME="nebula.service"

            echo "--- Stopping service ---"
            sudo systemctl stop $SERVICE_NAME || echo "Service not running or failed to stop (continuing deployment)"

            echo "--- Navigating to project directory ---"
            cd $PROJECT_DIR || exit 1

            echo "--- Pulling latest code ---"
            git checkout main
            git pull origin main

            echo "--- Verifying dependencies ---"
            go mod tidy

            echo "--- Building application ---"
            go build -o $BINARY_NAME ./cmd/server/main.go

            echo "--- Restarting service ---"
            sudo systemctl restart $SERVICE_NAME

            echo "--- Deployment finished ---"
